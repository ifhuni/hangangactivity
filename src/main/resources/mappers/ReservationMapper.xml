<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.hangangactivity.mapper.ReservationMapper">

  <resultMap id="ReservationPendingMap" type="com.example.hangangactivity.model.ReservationPending">
    <id property="id" column="id" />
    <result property="activityId" column="activity_id" />
    <result property="companyId" column="company_id" />
    <result property="activityTitle" column="activity_title" />
    <result property="activityDate" column="activity_date" />
    <result property="startTime" column="start_time" />
    <result property="endTime" column="end_time" />
    <result property="touristId" column="tourist_id" />
    <result property="touristName" column="tourist_name" />
    <result property="touristEmail" column="tourist_email" />
    <result property="touristNationality" column="tourist_nationality" />
    <result property="status" column="status" />
    <result property="specialRequest" column="special_request" />
    <result property="createdAt" column="created_at" />
  </resultMap>

  <sql id="baseSelect">
    SELECT
      r.id,
      r.activity_id,
      a.company_id,
      a.title AS activity_title,
      a.activity_date,
      a.start_time,
      a.end_time,
      t.id AS tourist_id,
      t."name" AS tourist_name,
      t.email AS tourist_email,
      t.nationality AS tourist_nationality,
      r.status,
      r.special_request,
      r.created_at
    FROM public.reservations r
    JOIN public.activities a ON r.activity_id = a.id
    JOIN public.tourists t ON r.tourist_id = t.id
  </sql>

  <select id="findAllPending" resultMap="ReservationPendingMap">
    <include refid="baseSelect" />
    WHERE r.status = 'pending'
    ORDER BY r.created_at ASC
  </select>

  <select id="findPendingByCompanyId" parameterType="long" resultMap="ReservationPendingMap">
    <include refid="baseSelect" />
    WHERE r.status = 'pending'
      AND a.company_id = #{companyId}
    ORDER BY r.created_at ASC
  </select>

  <select id="findPendingById" parameterType="long" resultMap="ReservationPendingMap">
    <include refid="baseSelect" />
    WHERE r.id = #{reservationId}
      AND r.status = 'pending'
  </select>

  <select id="findByActivityIdAndStatus" resultMap="ReservationPendingMap">
    <include refid="baseSelect" />
    WHERE r.activity_id = #{activityId}
    <if test="status != null and status != ''">
      AND r.status = #{status}
    </if>
    ORDER BY r.created_at ASC
  </select>

  <insert id="insert" parameterType="com.example.hangangactivity.model.Reservation"
          useGeneratedKeys="true" keyProperty="id">
    INSERT INTO public.reservations (
      activity_id,
      tourist_id,
      status,
      special_request
    ) VALUES (
      #{activityId},
      #{touristId},
      COALESCE(#{status}, 'pending'),
      #{specialRequest}
    )
  </insert>

  <update id="updateStatus">
    UPDATE public.reservations
    SET status = #{status}
    WHERE id = #{reservationId}
      AND status = 'pending'
  </update>

</mapper>

